{"version":3,"file":"react-rating.umd.min.js","sources":["../src/utils/style.js","../src/RatingSymbol.js","../src/Rating.js","../src/utils/noop.js","../src/RatingAPILayer.js"],"sourcesContent":["var style = {\r\n  display: 'inline-block',\r\n  borderRadius: '50%',\r\n  border: '5px double white',\r\n  width: 30,\r\n  height: 30\r\n};\r\n\r\nexport default {\r\n  empty: {\r\n    ...style,\r\n    backgroundColor: '#ccc'\r\n  },\r\n  full: {\r\n    ...style,\r\n    backgroundColor: 'black'\r\n  },\r\n  placeholder: {\r\n    ...style,\r\n    backgroundColor: 'red'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Return the corresponding React node for an icon.\r\nconst _iconNode = (icon) => {\r\n  // If it is already a React Element just return it.\r\n  if (React.isValidElement(icon)) {\r\n    return icon;\r\n  }\r\n  // If it is an object, try to use it as a CSS style object.\r\n  if (typeof icon === 'object' && icon !== null) {\r\n    return <span style={icon} />;\r\n  }\r\n  // If it is a string, use it as class names.\r\n  if (Object.prototype.toString.call(icon) === '[object String]') {\r\n    return <span className={icon} />;\r\n  }\r\n};\r\n\r\nclass RatingSymbol extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      index,\r\n      inactiveIcon,\r\n      activeIcon,\r\n      percent,\r\n      direction,\r\n      readonly,\r\n      onClick,\r\n      onMouseMove,\r\n      onTouchEnd\r\n    } = this.props;\r\n    const backgroundNode = _iconNode(inactiveIcon);\r\n    const showbgIcon = percent < 100;\r\n    const bgIconContainerStyle = showbgIcon\r\n      ? {}\r\n      : {\r\n          visibility: 'hidden'\r\n        };\r\n    const iconNode = _iconNode(activeIcon);\r\n    const iconContainerStyle = {\r\n      display: 'inline-block',\r\n      position: 'absolute',\r\n      overflow: 'hidden',\r\n      top: 0,\r\n      [direction === 'rtl' ? 'right' : 'left']: 0,\r\n      width: `${percent}%`\r\n    };\r\n    const style = {\r\n      cursor: !readonly ? 'pointer' : 'inherit',\r\n      display: 'inline-block',\r\n      position: 'relative'\r\n    };\r\n\r\n    function handleMouseMove(e) {\r\n      if (onMouseMove) {\r\n        onMouseMove(index, e);\r\n      }\r\n    }\r\n\r\n    function handleMouseClick(e) {\r\n      if (onClick) {\r\n        // [Supporting both TouchEvent and MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent)\r\n        // We must prevent firing click event twice on touch devices.\r\n        e.preventDefault();\r\n        onClick(index, e);\r\n      }\r\n    }\r\n\r\n    function handleTouchEnd(e) {\r\n      if (onTouchEnd) {\r\n        onTouchEnd(index, e);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <span\r\n        style={style}\r\n        onClick={handleMouseClick}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchMove={handleMouseMove}\r\n        onTouchEnd={handleTouchEnd}\r\n      >\r\n        <span style={bgIconContainerStyle}>\r\n          {backgroundNode}\r\n        </span>\r\n        <span style={iconContainerStyle}>\r\n          {iconNode}\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n// Define propTypes only in development. They will be void in production.\r\nRatingSymbol.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\r\n  index: PropTypes.number.isRequired,\r\n  readonly: PropTypes.bool.isRequired,\r\n  inactiveIcon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  activeIcon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  percent: PropTypes.number.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  onMouseMove: PropTypes.func,\r\n  onTouchMove: PropTypes.func,\r\n  onTouchEnd: PropTypes.func\r\n};\r\n\r\nexport default RatingSymbol;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Symbol from './RatingSymbol';\r\n\r\nclass Rating extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Indicates the value that is displayed to the user in the form of symbols.\r\n      // It can be either 0 (for no displayed symbols) or (0, end]\r\n      displayValue: this.props.value,\r\n      // Indicates if the user is currently hovering over the rating element\r\n      interacting: false\r\n    };\r\n    this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    this.symbolMouseMove = this.symbolMouseMove.bind(this);\r\n    this.symbolClick = this.symbolClick.bind(this);\r\n    this.symbolEnd = this.symbolEnd.bind(this);\r\n  }\r\n\r\n  // ...\r\n\r\n  // NOTE: This callback is a little bit fragile. Needs some \"care\" because\r\n  // it relies on brittle state kept with different props and state\r\n  // combinations to try to figure out from where we are coming, I mean, what\r\n  // caused this update.\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // When hover ends, call this.props.onHover with no value.\r\n    if (prevState.interacting && !this.state.interacting) {\r\n      return this.props.onHover();\r\n    }\r\n\r\n    // When hover over.\r\n    // Hover in should only be emitted while we are hovering (interacting),\r\n    // unless we changed the value, usually originated by an onClick event.\r\n    // We do not want to emit a hover in event again on the clicked\r\n    // symbol.\r\n    if (this.state.interacting && prevProps.value == this.props.value) {\r\n      this.props.onHover(this.state.displayValue);\r\n    }\r\n  }\r\n\r\n  symbolEnd(symbolIndex, event) {\r\n    // Do not raise the click event on quiet mode when a touch end is received.\r\n    // On quiet mode the touch end event only notifies that we have left the\r\n    // symbol. We wait for the actual click event to call the symbolClick.\r\n    // On not quiet mode we simulate the click event on touch end and we just\r\n    // prevent the real on click event to be raised.\r\n    // NOTE: I know how we manage click events on touch devices is a little bit\r\n    // weird because we do not notify the starting value that was clicked but\r\n    // the last (touched) value.\r\n    if (!this.props.quiet) {\r\n      this.symbolClick(symbolIndex, event);\r\n      event.preventDefault();\r\n    }\r\n    // On touch end we are \"leaving\" the symbol.\r\n    this.onMouseLeave();\r\n  }\r\n\r\n  symbolClick(symbolIndex, event) {\r\n    const value = this.calculateDisplayValue(symbolIndex, event);\r\n    this.props.onClick(value, event);\r\n  }\r\n\r\n  symbolMouseMove(symbolIndex, event) {\r\n    const value = this.calculateDisplayValue(symbolIndex, event);\r\n    // This call should cause an update only if the state changes.\r\n    // Mainly the first time the mouse enters and whenever the value changes.\r\n    // So DidComponentUpdate is NOT called for every mouse movement.\r\n    this.setState({\r\n      interacting: !this.props.readonly,\r\n      displayValue: value\r\n    });\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.setState({\r\n      displayValue: this.props.value,\r\n      interacting: false\r\n    });\r\n  }\r\n\r\n  calculateDisplayValue(symbolIndex, event) {\r\n    const percentage = this.calculateHoverPercentage(event);\r\n    // Get the closest top fraction.\r\n    const fraction = Math.ceil(percentage % 1 * this.props.fractions) / this.props.fractions;\r\n    // Truncate decimal trying to avoid float precission issues.\r\n    const precision = 10 ** 3;\r\n    const displayValue =\r\n      symbolIndex + (Math.floor(percentage) + Math.floor(fraction * precision) / precision);\r\n    // ensure the returned value is greater than 0 and lower than totalSymbols\r\n    return displayValue > 0 ? displayValue > this.props.totalSymbols ? this.props.totalSymbols : displayValue : 1 / this.props.fractions;\r\n  }\r\n\r\n  calculateHoverPercentage(event) {\r\n    const clientX = event.nativeEvent.type.indexOf(\"touch\") > -1\r\n      ? event.nativeEvent.type.indexOf(\"touchend\") > -1\r\n        ? event.changedTouches[0].clientX\r\n        : event.touches[0].clientX\r\n      : event.clientX;\r\n\r\n    const targetRect = event.target.getBoundingClientRect();\r\n    const delta = this.props.direction === 'rtl'\r\n      ? targetRect.right - clientX\r\n      : clientX - targetRect.left;\r\n\r\n    // Returning 0 if the delta is negative solves the flickering issue\r\n    return delta < 0 ? 0 : delta / targetRect.width;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      readonly,\r\n      quiet,\r\n      totalSymbols,\r\n      value,\r\n      placeholderValue,\r\n      direction,\r\n      emptySymbol,\r\n      fullSymbol,\r\n      placeholderSymbol,\r\n      className,\r\n      id,\r\n      style,\r\n      tabIndex\r\n    } = this.props;\r\n    const { displayValue, interacting } = this.state;\r\n    const symbolNodes = [];\r\n    const empty = [].concat(emptySymbol);\r\n    const full = [].concat(fullSymbol);\r\n    const placeholder = [].concat(placeholderSymbol);\r\n    const shouldDisplayPlaceholder =\r\n      placeholderValue !== 0 &&\r\n      value === 0 &&\r\n      !interacting;\r\n\r\n    // The value that will be used as base for calculating how to render the symbols\r\n    let renderedValue;\r\n    if (shouldDisplayPlaceholder) {\r\n      renderedValue = placeholderValue;\r\n    } else {\r\n      renderedValue = quiet ? value : displayValue;\r\n    }\r\n\r\n    // The amount of full symbols\r\n    const fullSymbols = Math.floor(renderedValue);\r\n\r\n    for (let i = 0; i < totalSymbols; i++) {\r\n      let percent;\r\n      // Calculate each symbol's fullness percentage\r\n      if (i - fullSymbols < 0) {\r\n        percent = 100;\r\n      } else if (i - fullSymbols === 0) {\r\n        percent = (renderedValue - i) * 100;\r\n      } else {\r\n        percent = 0;\r\n      }\r\n\r\n      symbolNodes.push(\r\n        <Symbol\r\n          key={i}\r\n          index={i}\r\n          readonly={readonly}\r\n          inactiveIcon={empty[i % empty.length]}\r\n          activeIcon={\r\n            shouldDisplayPlaceholder ? placeholder[i % full.length] : full[i % full.length]\r\n          }\r\n          percent={percent}\r\n          direction={direction}\r\n          {...(!readonly && {\r\n            onClick: this.symbolClick,\r\n            onMouseMove: this.symbolMouseMove,\r\n            onTouchMove: this.symbolMouseMove,\r\n            onTouchEnd: this.symbolEnd\r\n          })}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span\r\n        id={id}\r\n        style={{...style, display: 'inline-block', direction }}\r\n        className={className}\r\n        tabIndex={tabIndex}\r\n        aria-label={this.props['aria-label']}\r\n        {...(!readonly && {\r\n          onMouseLeave: this.onMouseLeave\r\n        })}\r\n      >\r\n        {symbolNodes}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n// Define propTypes only in development.\r\nRating.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\r\n  totalSymbols: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired, // Always >= 0\r\n  placeholderValue: PropTypes.number.isRequired,\r\n  readonly: PropTypes.bool.isRequired,\r\n  quiet: PropTypes.bool.isRequired,\r\n  fractions: PropTypes.number.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  emptySymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  fullSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]).isRequired,\r\n  placeholderSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  onClick: PropTypes.func.isRequired,\r\n  onHover: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Rating;\r\n","function noop() {}\r\nnoop._name = 'react_rating_noop';\r\n\r\nexport default noop;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from './utils/style';\r\nimport Rating from './Rating';\r\nimport noop from './utils/noop';\r\n\r\nclass RatingAPILayer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.initialRating\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleHover = this.handleHover.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      value: props.initialRating\r\n    }\r\n  }\r\n\r\n  handleClick(value, e) {\r\n    const newValue = this.translateDisplayValueToValue(value);\r\n    this.props.onClick(newValue);\r\n    // Avoid calling setState if not necessary. Micro optimisation.\r\n    if (this.state.value !== newValue) {\r\n      // If we have a new value trigger onChange callback.\r\n      this.setState({\r\n        value: newValue\r\n      }, () => this.props.onChange(this.state.value));\r\n    }\r\n  }\r\n\r\n  handleHover(displayValue) {\r\n    const value = displayValue === undefined\r\n      ? displayValue\r\n      : this.translateDisplayValueToValue(displayValue);\r\n    this.props.onHover(value);\r\n  }\r\n\r\n  translateDisplayValueToValue(displayValue) {\r\n    const translatedValue = displayValue * this.props.step + this.props.start;\r\n    // minimum value cannot be equal to start, since it's exclusive\r\n    return translatedValue === this.props.start\r\n      ? translatedValue + 1 / this.props.fractions\r\n      : translatedValue;\r\n  }\r\n\r\n  tranlateValueToDisplayValue(value) {\r\n    if (value === undefined) {\r\n      return 0;\r\n    }\r\n    return (value - this.props.start) / this.props.step;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      emptySymbol,\r\n      fullSymbol,\r\n      placeholderSymbol,\r\n      readonly,\r\n      quiet,\r\n      fractions,\r\n      direction,\r\n      start,\r\n      stop,\r\n      id,\r\n      className,\r\n      style,\r\n      tabIndex\r\n    } = this.props;\r\n\r\n    function calculateTotalSymbols(start, stop, step) {\r\n      return Math.floor((stop - start) / step);\r\n    }\r\n\r\n    return (\r\n      <Rating\r\n        id={id}\r\n        style={style}\r\n        className={className}\r\n        tabIndex={tabIndex}\r\n        aria-label={this.props['aria-label']}\r\n        totalSymbols={calculateTotalSymbols(start, stop, step)}\r\n        value={this.tranlateValueToDisplayValue(this.state.value)}\r\n        placeholderValue={this.tranlateValueToDisplayValue(this.props.placeholderRating)}\r\n        readonly={readonly}\r\n        quiet={quiet}\r\n        fractions={fractions}\r\n        direction={direction}\r\n        emptySymbol={emptySymbol}\r\n        fullSymbol={fullSymbol}\r\n        placeholderSymbol={placeholderSymbol}\r\n        onClick={this.handleClick}\r\n        onHover={this.handleHover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nRatingAPILayer.defaultProps = {\r\n  start: 0,\r\n  stop: 5,\r\n  step: 1,\r\n  readonly: false,\r\n  quiet: false,\r\n  fractions: 1,\r\n  direction: 'ltr',\r\n  onHover: noop,\r\n  onClick: noop,\r\n  onChange: noop,\r\n  emptySymbol: Style.empty,\r\n  fullSymbol: Style.full,\r\n  placeholderSymbol: Style.placeholder\r\n};\r\n\r\n// Define propTypes only in development.\r\nRatingAPILayer.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\r\n  start: PropTypes.number,\r\n  stop: PropTypes.number,\r\n  step: PropTypes.number,\r\n  initialRating: PropTypes.number,\r\n  placeholderRating: PropTypes.number,\r\n  readonly: PropTypes.bool,\r\n  quiet: PropTypes.bool,\r\n  fractions: PropTypes.number,\r\n  direction: PropTypes.string,\r\n  emptySymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  fullSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  placeholderSymbol: PropTypes.oneOfType([\r\n    // Array of class names and/or style objects.\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\r\n    // Class names.\r\n    PropTypes.string,\r\n    // Style objects.\r\n    PropTypes.object,\r\n    // React element\r\n    PropTypes.element\r\n  ]),\r\n  onHover: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default RatingAPILayer;\r\n"],"names":["style","display","borderRadius","border","width","height","empty","_objectSpread","backgroundColor","full","placeholder","_iconNode","icon","React","isValidElement","_typeof","createElement","Object","prototype","toString","call","className","RatingSymbol","_React$PureComponent","_classCallCheck","_callSuper","arguments","_inherits","PureComponent","_createClass","key","value","_this$props","this","props","index","inactiveIcon","activeIcon","percent","direction","readonly","onClick","onMouseMove","onTouchEnd","backgroundNode","bgIconContainerStyle","visibility","iconNode","iconContainerStyle","_defineProperty","position","overflow","top","concat","cursor","handleMouseMove","e","preventDefault","onTouchMove","Rating","_this","state","displayValue","interacting","onMouseLeave","bind","symbolMouseMove","symbolClick","symbolEnd","prevProps","prevState","onHover","symbolIndex","event","quiet","calculateDisplayValue","setState","percentage","calculateHoverPercentage","fraction","Math","ceil","fractions","precision","pow","floor","totalSymbols","clientX","nativeEvent","type","indexOf","changedTouches","touches","targetRect","target","getBoundingClientRect","delta","right","left","renderedValue","placeholderValue","emptySymbol","fullSymbol","placeholderSymbol","id","tabIndex","_this$state","symbolNodes","shouldDisplayPlaceholder","fullSymbols","i","push","_Symbol","_extends","length","aria-label","noop","_name","RatingAPILayer","initialRating","handleClick","handleHover","_this2","newValue","translateDisplayValueToValue","onChange","undefined","translatedValue","step","start","stop","calculateTotalSymbols","tranlateValueToDisplayValue","placeholderRating","defaultProps","Style"],"mappings":"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"}